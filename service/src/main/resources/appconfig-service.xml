<?xml version = "1.0" encoding = "UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd" >

    <!-- allows for ${} replacement in the spring xml configuration  -->
    <!-- either from the system.properties file on the classpath   -->
    <!-- or APPLICATION_PROPERTIES_FILE environment in docker-->
    <!-- use local system.properties in tests-->
    <!-- use environment injected file in docker -->
    <!-- systemEnvironment or systemProperties can be used-->
    <!--    <context:property-placeholder
    location="classpath:system.properties,
             file:#{systemEnvironment['APPLICATION_ENVIRONMENT_FILE']},
             file:#{systemProperties['applicationPropertiesFile']}"
    ignore-unresolvable="false" ignore-resource-not-found="true" />-->

    <!-- see https://stackoverflow.com/questions/11415711/programmatic-access-to-properties-created-by-property-placeholder -->
    <util:properties id="appProperties" ignore-resource-not-found="true"
                     location="classpath:system.properties,
                         file:#{systemEnvironment['APPLICATION_ENVIRONMENT_FILE']},
                         file:#{systemProperties['applicationPropertiesFile']}"/>
    <context:property-placeholder ignore-unresolvable="true" properties-ref="appProperties"/>

    <!-- imports classpath application configuration resources -->
    <import resource="classpath:appconfig-data.xml"/>

    <!--initialise db add role types-->
    <bean id="dBInitialise " class="uk.ac.solent.service.config.DBInitialise " init-method="init" />

    <import resource="classpath:appconfig-security.xml"/>

    <!-- Scans for components that will be auto-registered as Spring beans -->
    <context:component-scan base-package="uk.ac.solent.service.booking,
                uk.ac.solent.service.config,
                uk.ac.solent.service.route,
                uk.ac.solent.service.security,
                uk.ac.solent.service.ship,
                uk.ac.solent.service.user" />


    <!-- JMS Beans -->
    <!--<amq:connectionFactory id="amqConnectionFactory" brokerURL="vm://localhost"/>-->

    <!-- creates an activemq connection factory using the amq namespace -->
    <amq:connectionFactory id="amqConnectionFactory" brokerURL="${jms.url}" userName="${jms.username}" password="${jms.password}" />

</beans>
